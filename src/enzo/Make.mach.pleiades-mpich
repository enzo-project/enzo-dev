#=======================================================================
#
# FILE:        Make.mach.nasa-pleiades
#
# DESCRIPTION: Makefile settings for NASA's pleiades
#
#    modules: comp-intel/2020.4.306
#             hdf5/1.8.18_serial 
#             custom local mpich install 
#
# AUTHOR:      John Wise
# DATE:        2010-01-22
#
# MODIFIED1:   Devin Silvia
# DATE:        2010-07-02
#
# MODIFIED2:   Nathan Goldbaum
# DATE:        2012-04-18
#
# MODIFIED3:   Nathan Goldbaum
# DATE:        2014-04-24
#
# MODIFIED3:   Jason Tumlinson 
# DATE:        2022-11-11

#=======================================================================

MACH_TEXT  = NASA Pleiades
MACH_VALID = 1
MACH_FILE  = Make.mach.pleiades-mpich 

MACHINE_NOTES = "MACHINE_NOTES for Pleiades at NASA: \
        The following modules are needed to compile: comp-intel/2020.4.304 \
            hdf5/1.8.18_serial, and a custom mpich install" 

#-----------------------------------------------------------------------
# Commands to run test executables
#-----------------------------------------------------------------------


#-----------------------------------------------------------------------
# Install paths (local variables)
#-----------------------------------------------------------------------

#LOCAL_MPI_INSTALL = /nasa/hpe/mpt/2.25/ # default for most enzo runs 
LOCAL_MPI_INSTALL = /u/jtumlins/installs/mpich-4.0.3/usr/local/
LOCAL_HDF5_INSTALL    = /nasa/hdf5/1.8.18_serial
LOCAL_COMPILER_DIR = /nasa/intel/Compiler/2020.4.304/compilers_and_libraries_2020.4.304/linux/
LOCAL_GRACKLE_INSTALL = /u/jtumlins/grackle-mpich/build-mpich/

#-----------------------------------------------------------------------
# Compiler settings
#-----------------------------------------------------------------------

MACH_CPP       = $(LOCAL_COMPILER_DIR)/bin/icpc

# With MPI

MACH_CC_MPI    = $(LOCAL_COMPILER_DIR)/bin/intel64/icc
MACH_CXX_MPI   = $(LOCAL_COMPILER_DIR)/bin/intel64/icpc
MACH_FC_MPI    = $(LOCAL_COMPILER_DIR)/bin/intel64/ifort
MACH_F90_MPI   = $(LOCAL_COMPILER_DIR)/bin/intel64/ifort
MACH_LD_MPI    = $(LOCAL_COMPILER_DIR)/bin/intel64/icpc

# Without MPI

MACH_CC_NOMPI  = $(LOCAL_COMPILER_DIR)/bin/intel64/icc
MACH_CXX_NOMPI = $(LOCAL_COMPILER_DIR)/bin/intel64/icpc
MACH_FC_NOMPI  = $(LOCAL_COMPILER_DIR)/bin/intel64/ifort
MACH_F90_NOMPI = $(LOCAL_COMPILER_DIR)/bin/intel64/ifort
MACH_LD_NOMPI  = $(LOCAL_COMPILER_DIR)/bin/intel64/icpc

#-----------------------------------------------------------------------
# Machine-dependent defines
#-----------------------------------------------------------------------

MACH_DEFINES = -DLINUX -DH5_USE_16_API 

#-----------------------------------------------------------------------
# Compiler flag settings
#-----------------------------------------------------------------------

MACH_CPPFLAGS = -P -traditional
MACH_CFLAGS   = 
MACH_CXXFLAGS = 
MACH_FFLAGS   = 
MACH_F90FLAGS = 
MACH_LDFLAGS  = 
#,-static 

#-----------------------------------------------------------------------
# Optimization flags
#-----------------------------------------------------------------------

# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***
#
#  Use optimization -O2 or greater with PGI compilers at your own
#  risk!  Older versions of Grid_PPMDirectEuler.C compiled with -O2
#  led to incorrect results on many test problems, and CURRENT
#  (-r1995) versions of ffte4X.src and ZeusSource.C lead to incorrect
#  results for ZeldovichPancake and ExtremeAdvectionTest tests,
#  respectively.  jobordner@ucsd.edu
#
# *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING ***

MACH_OPT_WARN        = 
MACH_OPT_DEBUG       = -g -O0
# Best for pleiades ivy bridge nodes.
# See: goo.gl/A0IFMV
MACH_OPT_HIGH        = -g -O2 -xAVX -ip -ipo 
# for aggressive compilation on Ivy / Sandy 
MACH_OPT_AGGRESSIVE  = -O3 -xAVX -ip -ipo 
# for aggressive compilation on Haswell / Broadwell 
MACH_OPT_AGGRESSIVE  = -O3 -xCORE-AVX2 -ip -ipo 

#-----------------------------------------------------------------------
# Includes
#-----------------------------------------------------------------------

LOCAL_INCLUDES_MPI    = -I$(LOCAL_MPI_INSTALL)/include
LOCAL_INCLUDES_HDF5   = -I$(LOCAL_HDF5_INSTALL)/include
#LOCAL_INCLUDES_PYTHON = -I$(LOCAL_PYTHON_INSTALL)/include/python2.7/ \
#                        -I$(LOCAL_PYTHON_INSTALL)/lib/python2.7/site-packages/numpy/core/include
LOCAL_INCLUDES_GRACKLE = -I$(LOCAL_GRACKLE_INSTALL)/include

MACH_INCLUDES         = $(LOCAL_INCLUDES_HDF5) $(LOCAL_INCLUDES_GRACKLE)
MACH_INCLUDES_MPI     = $(LOCAL_INCLUDES_MPI)
MACH_INCLUDES_HYPRE   = $(LOCAL_INCLUDES_HYPRE)

#-----------------------------------------------------------------------
# Libraries
#-----------------------------------------------------------------------
#

LOCAL_LIBS_MPI    = -L$(LOCAL_MPI_INSTALL)/lib -lmpi -lmpich -lmpicxx -lmpifort -L/u/jtumlins/installs/mpich-4.0.3/usr/lib -lucp -lucs -lucm -luct
LOCAL_LIBS_HDF5   = -L$(LOCAL_HDF5_INSTALL)/lib -lhdf5 
LOCAL_LIBS_LZ     = -L/u/jtumlins/anaconda2/lib -lz
#LOCAL_LIBS_GRACKLE = -L$(LOCAL_GRACKLE_INSTALL)/lib -lgrackle
LOCAL_LIBS_GRACKLE = /u/jtumlins/grackle-mpich/src/clib/*.o
#LOCAL_LIBS_PYTHON  = $(LOCAL_PYTHON_INSTALL)/lib/python2.6/config/libpython2.6.a -lpthread -lutil

LOCAL_LIBS_MACH = -lifcore -lifport 

MACH_LIBS         = $(LOCAL_LIBS_HDF5) $(LOCAL_LIBS_MACH) $(LOCAL_LIBS_LZ) $(LOCAL_LIBS_GRACKLE) #$(LOCAL_LIBS_PYTHON)
MACH_LIBS_MPI     = $(LOCAL_LIBS_MPI)